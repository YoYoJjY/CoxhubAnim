-- List of allowed Client IDs (replace with actual Client IDs you want to allow)
local allowedHWIDs = {
    "76a12993-7f86-427c-a10e-56dbd5b216bb",  -- cox phone
    "7A1633DE-D656-4D0C-A6BC-E6A265281366",  -- cox pc
    "1ad4d372-6530-4add-ae16-ad7ec9d57b4f",  -- dashawn3245
    "93f62176-0af3-4609-8481-5fe8eae26557",  -- fool
    "df264f7e-2873-4021-be48-af7b459d0376",  -- may
    "6786de48-9c7a-42d6-8c45-fa31521f9132",  -- amirah
    "4193a6d1-bf57-4b3d-b844-5e1232af42b7",  -- Jah
    "fc963b89-3e36-4a87-947f-ff14557b0eca",  -- Mar
    "7d74a583-01ea-4368-ba0c-0bc8be08e534",  -- winner
}
-- Function to check if the player's Client ID is allowed
local function checkHWID(playerHWID)
    for _, hwid in pairs(allowedHWIDs) do
        if playerHWID == hwid then
            return true
        end
    end
    return false
end

-- Function to retrieve the player's Client ID
local function getPlayerHWID()
    return game:GetService("RbxAnalyticsService"):GetClientId()  -- Using Client ID here
end

-- Get the player's Client ID
local playerHWID = getPlayerHWID()

-- Check if the Client ID is whitelisted
if checkHWID(playerHWID) then
    print("Client ID verified, script is enabled.")
-- Create the button and UI
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create a ScreenGui to hold the buttons
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CoxsAnimationGui"
screenGui.Parent = playerGui

-- Create a ScrollingFrame to hold the buttons and make it scrollable
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Name = "ScrollFrame"
scrollFrame.Size = UDim2.new(0, 150, 0, 250)  -- Adjust the size to fit the screen
scrollFrame.Position = UDim2.new(1, -650, 0, 10)  -- Position it on the right side
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 400)  -- Adjust canvas size for scrolling
scrollFrame.ScrollBarThickness = 10  -- Make the scrollbar visible
scrollFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)  -- Background color for scroll frame
scrollFrame.Parent = screenGui
scrollFrame.Visible = false  -- Initially hidden

-- Create buttons with only Tripout and StopAnimButton
local buttons = {
    {name = "StopAnim", position = 10},
    {name = "backflip", position = 55},
    {name = "split", position = 100},
    {name = "dance22", position = 145},
    {name = "GETUP", position = 190},
    {name = "breakdance", position = 235},
    {name = "dance6", position = 280},
    {name = "Coming Soon!!!", position = 325},
}

-- Create buttons dynamically
for _, buttonData in ipairs(buttons) do
    local button = Instance.new("TextButton")
    button.Name = buttonData.name .. "Button"
    button.Size = UDim2.new(0, 120, 0, 35)
    button.Position = UDim2.new(0, 10, 0, buttonData.position)
    button.Text = buttonData.name
    button.TextSize = 15
    button.TextColor3 = Color3.fromRGB(0, 255, 255)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.BackgroundTransparency = 0.3
    button.Parent = scrollFrame
end

-- Function to trigger the "backflip" animation
local function playbackflip()
    local speaker = player
    local hitAnim = Instance.new("Animation")

    -- Stop existing animations and disable the Animate script
    for i, track in pairs(speaker.Character.Humanoid:GetPlayingAnimationTracks()) do
        track:Stop()
    end
    speaker.Character.Animate.Disabled = true

    hitAnim.AnimationId = "rbxassetid://15693621070"  -- backflip animation ID
    local hit = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(hitAnim)
    hit:Play(0.1, 1, 2)  -- Play the animation with a slight delay
    hit.TimePosition = 0.4  -- Set the animation start position
end

-- Function to trigger the "split" animation
local function playsplit()
    local speaker = player
    local hitAnim = Instance.new("Animation")

    -- Stop existing animations and disable the Animate script
    for i, track in pairs(speaker.Character.Humanoid:GetPlayingAnimationTracks()) do
        track:Stop()
    end
    speaker.Character.Animate.Disabled = true

    hitAnim.AnimationId = "rbxassetid://10714390497"  -- split animation ID
    local hit = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(hitAnim)
    hit:Play(0.1, 1, 2)  -- Play the animation with a slight delay
    hit.TimePosition = 0.4  -- Set the animation start position
end

-- Function to trigger the "dance22" animation
local function playdance22()
    local speaker = player
    local hitAnim = Instance.new("Animation")

    -- Stop existing animations and disable the Animate script
    for i, track in pairs(speaker.Character.Humanoid:GetPlayingAnimationTracks()) do
        track:Stop()
    end
    speaker.Character.Animate.Disabled = true

    hitAnim.AnimationId = "rbxassetid://85267023718407"  -- dance22 animation ID
    local hit = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(hitAnim)
    hit:Play(0.1, 1, 2)  -- Play the animation with a slight delay
    hit.TimePosition = 8.2  -- Set the animation start position
end

-- Function to trigger the "GETUP" animation
local function playGETUP()
    local speaker = player
    local hitAnim = Instance.new("Animation")

    -- Stop existing animations and disable the Animate script
    for i, track in pairs(speaker.Character.Humanoid:GetPlayingAnimationTracks()) do
        track:Stop()
    end
    speaker.Character.Animate.Disabled = true

    hitAnim.AnimationId = "rbxassetid://5915648917"  -- GETUP animation ID
    local hit = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(hitAnim)
    hit:Play(0.1, 1, 2)  -- Play the animation with a slight delay
    hit.TimePosition = 1.5  -- Set the animation start position
end

-- Function to trigger the "breakdance" animation
local function playbreakdance()
    local speaker = player
    local hitAnim = Instance.new("Animation")

    -- Stop existing animations and disable the Animate script
    for i, track in pairs(speaker.Character.Humanoid:GetPlayingAnimationTracks()) do
        track:Stop()
    end
    speaker.Character.Animate.Disabled = true

    hitAnim.AnimationId = "rbxassetid://10214311282"  -- breakdance animation ID
    local hit = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(hitAnim)
    hit:Play(0.1, 1, 1)  -- Play the animation with a slight delay
    hit.TimePosition = 1  -- Set the animation start position
end

-- Function to trigger the "dance6" animation
local function playdance6()
    local speaker = player
    local hitAnim = Instance.new("Animation")

    -- Stop existing animations and disable the Animate script
    for i, track in pairs(speaker.Character.Humanoid:GetPlayingAnimationTracks()) do
        track:Stop()
    end
    speaker.Character.Animate.Disabled = true

    hitAnim.AnimationId = "rbxassetid://12259828678"  -- dance6 animation ID
    local hit = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(hitAnim)
    hit:Play(0.1, 1, 2)  -- Play the animation with a slight delay
    hit.TimePosition = 0  -- Set the animation start position
end

-- Function to stop any playing animations
local function stopAnimations()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass('Humanoid')

    if humanoid then
        -- Stop all animations that are currently playing
        for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
            track:Stop()
        end

        -- Optionally, re-enable the Animate script if you want animations to resume
        character.Animate.Disabled = false
    else
        warn("Humanoid not found in character.")
    end
end

-- Connect the button clicks to the respective functions
scrollFrame:WaitForChild("backflipButton").MouseButton1Click:Connect(playbackflip)
scrollFrame:WaitForChild("splitButton").MouseButton1Click:Connect(playsplit)
scrollFrame:WaitForChild("dance22Button").MouseButton1Click:Connect(playdance22)
scrollFrame:WaitForChild("GETUPButton").MouseButton1Click:Connect(playGETUP)
scrollFrame:WaitForChild("breakdanceButton").MouseButton1Click:Connect(playbreakdance)
scrollFrame:WaitForChild("dance6Button").MouseButton1Click:Connect(playdance6)

-- Create the Open/Close button
local openCloseButton = Instance.new("TextButton")
openCloseButton.Name = "OpenCloseButton"
openCloseButton.Size = UDim2.new(0, 80, 0, 20)
openCloseButton.Position = UDim2.new(0, 10, 0, 35)
openCloseButton.Text = "Combos"
openCloseButton.TextSize = 10
openCloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
openCloseButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
openCloseButton.BackgroundTransparency = 0.3
openCloseButton.Parent = screenGui

-- Toggle the visibility of the ScrollFrame and change the button text
openCloseButton.MouseButton1Click:Connect(function()
    if scrollFrame.Visible then
        scrollFrame.Visible = false
        openCloseButton.Text = "Combos"
    else
        scrollFrame.Visible = true
        openCloseButton.Text = "Close"
    end
end)

-- Make the scrollFrame draggable
local dragging = false
local dragStart = nil
local startPos = nil

-- Create a function to handle dragging
local function onInputBegan(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        -- When the mouse button is pressed, start dragging
        dragging = true
        dragStart = input.Position
        startPos = scrollFrame.Position
    end
end

local function onInputChanged(input)
    if dragging then
        -- If dragging, calculate the new position based on mouse movement
        local delta = input.Position - dragStart
        scrollFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end

local function onInputEnded(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        -- Stop dragging when the mouse button is released
        dragging = false
    end
end

-- Connect the input events to make the GUI draggable
scrollFrame.InputBegan:Connect(onInputBegan)
scrollFrame.InputChanged:Connect(onInputChanged)
scrollFrame.InputEnded:Connect(onInputEnded)

else
    print("Client ID not whitelisted, script is disabled.")
    -- Disable plugin functionality here
end
